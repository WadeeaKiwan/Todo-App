{"version":3,"sources":["redux/actions/userActions.js","redux/types.js","components/layout/Header.js","components/layout/Footer.js","util/PrivateRoute.js","components/Home.js","components/user/Signup.js","components/user/Login.js","components/todos/TodoItem.js","redux/actions/todoActions.js","components/todos/TodoList.js","components/todos/TodoForm.js","components/SearchBar.js","redux/reducers/userReducer.js","redux/reducers/todoReducer.js","redux/store.js","components/Dashboard.js","components/todos/EditTodo.js","App.js","util/theme.js","serviceWorker.js","index.js"],"names":["loadUser","dispatch","a","axios","get","process","headers","Authorization","localStorage","token","res","type","payload","data","console","error","message","connect","state","isAuthenticated","user","logoutUser","history","push","err","withStyles","theme","styles","grow","flexGrow","title","textDecoration","color","headerIcon","width","marginRight","spacing","navButtons","padding","fontWeight","backgroundColor","palette","primary","main","borderRadius","sectionDesktop","display","breakpoints","up","sectionMobile","withRouter","classes","useState","mobileMoreAnchorEl","setMobileMoreAnchorEl","isMobileMenuOpen","Boolean","renderMobileMenu","Menu","anchorEl","anchorOrigin","vertical","horizontal","id","keepMounted","transformOrigin","open","onClose","Fragment","MenuItem","className","to","IconButton","onClick","AppBar","position","Toolbar","src","alt","Typography","variant","noWrap","Button","edge","href","aria-label","aria-controls","aria-haspopup","event","currentTarget","footer","height","background","justifyContent","flexDirection","footerText","textAlign","Component","component","loading","rest","render","props","containerHeader","marginBottom","Grow","in","timeout","Container","maxWidth","image","signupUser","post","JSON","stringify","response","errors","name","email","password","confirmPassword","formData","setFormData","handleChange","target","value","prevState","handleSubmit","preventDefault","log","form","pageTitle","onSubmit","TextField","label","textField","onChange","fullWidth","required","button","disabled","CircularProgress","size","progress","loginUser","markTodo","todoId","put","deleteTodo","delete","todoContainer","completed","inCompleted","todoCard","editButton","top","right","zIndex","deleteButton","todoItemDetails","categoryBadge","todo","done","setDone","dayjs","extend","relativeTime","Tooltip","Grid","item","xs","Slide","direction","Card","CardActionArea","CardContent","cardContent","gutterBottom","description","createdAt","fromNow","category","todoListContainer","todos","spinnerDiv","length","container","map","key","createTodo","updateTodo","todoForm","margin","todoButton","marginTop","todoProgress","edit","useHistory","replace","todoTextField","searchTodos","searchText","searchContainer","setSearchText","useEffect","placeholder","e","InputProps","endAdornment","initialState","getItem","filteredTodos","middleware","thunk","reducers","combineReducers","action","setItem","removeItem","filter","toLowerCase","indexOf","store","createStore","composeWithDevTools","applyMiddleware","getTodosByUserId","userId","profileImage","profileDetails","verticalAlign","todoSearch","setTodoSearch","subscribe","getState","sm","Paper","Mail","CalendarToday","format","getTodo","editTodoContainer","useParams","createMuiTheme","light","dark","contrastText","secondary","customError","fontSize","App","exact","path","Home","Dashboard","Signup","Login","EditTodo","window","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.45eb1f80.chunk.js","sourcesContent":["import {\r\n  LOAD_USER,\r\n  SIGNUP_USER,\r\n  LOGIN_USER,\r\n  USER_LOADING,\r\n  SIGNUP_USER_FAIL,\r\n  LOGIN_USER_FAIL,\r\n  LOGOUT_USER\r\n} from \"../types\";\r\nimport axios from \"axios\";\r\n\r\nexport const loadUser = () => async (dispatch) => {\r\n  try {\r\n    const res = await axios.get(`${process.env.REACT_APP_BACKEND_URL}/users`, {\r\n      headers: {\r\n        Authorization: `Bearer ${localStorage.token}`\r\n      }\r\n    });\r\n\r\n    dispatch({\r\n      type: LOAD_USER,\r\n      payload: res.data\r\n    });\r\n  } catch (err) {\r\n    console.error(err.message);\r\n  }\r\n};\r\n\r\nexport const signupUser = (payload) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: USER_LOADING });\r\n\r\n    const res = await axios.post(\r\n      `${process.env.REACT_APP_BACKEND_URL}/users/signup`,\r\n      JSON.stringify(payload),\r\n      {\r\n        headers: {\r\n          \"Content-Type\": \"application/json\"\r\n        }\r\n      }\r\n    );\r\n\r\n    dispatch({\r\n      type: SIGNUP_USER,\r\n      payload: res.data\r\n    });\r\n  } catch (err) {\r\n    console.error(err.message);\r\n    dispatch({\r\n      type: SIGNUP_USER_FAIL,\r\n      payload: err.response.data.errors\r\n    });\r\n  }\r\n};\r\n\r\nexport const loginUser = (payload) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: USER_LOADING });\r\n\r\n    const res = await axios.post(\r\n      `${process.env.REACT_APP_BACKEND_URL}/users/login`,\r\n      JSON.stringify(payload),\r\n      {\r\n        headers: {\r\n          \"Content-Type\": \"application/json\"\r\n        }\r\n      }\r\n    );\r\n\r\n    dispatch({\r\n      type: LOGIN_USER,\r\n      payload: res.data\r\n    });\r\n\r\n    dispatch(loadUser());\r\n  } catch (err) {\r\n    console.error(err.message);\r\n    dispatch({\r\n      type: LOGIN_USER_FAIL,\r\n      payload: err.response.data.errors\r\n    });\r\n  }\r\n};\r\n\r\nexport const logoutUser = (history) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: LOGOUT_USER });\r\n\r\n    history.push(\"/\");\r\n  } catch (err) {\r\n    console.error(err.message);\r\n  }\r\n};\r\n","export const LOAD_USER = \"LOAD_USER\";\r\nexport const SIGNUP_USER = \"SIGNUP_USER\";\r\nexport const LOGIN_USER = \"LOGIN_USER\";\r\nexport const USER_LOADING = \"USER_LOADING\";\r\nexport const LOAD_USER_FAIL = \"LOAD_USER_FAIL\";\r\nexport const SIGNUP_USER_FAIL = \"SIGNUP_USER_FAIL\";\r\nexport const LOGIN_USER_FAIL = \"LOGIN_USER_FAIL\";\r\nexport const LOGOUT_USER = \"LOGOUT_USER\";\r\n\r\nexport const TODO_LOADING = \"TODO_LOADING\";\r\nexport const GET_TODOS = \"GET_TODOS\";\r\nexport const GET_TODO = \"GET_TODO\";\r\nexport const CREATE_TODO = \"CREATE_TODO\";\r\nexport const UPDATE_TODO = \"UPDATE_TODO\";\r\nexport const MARK_TODO = \"MARK_TODO\";\r\nexport const DELETE_TODO = \"DELETE_TODO\";\r\nexport const SEARCH_TODOS = \"SEARCH_TODOS\";\r\n","import React, { useState } from \"react\";\r\nimport { NavLink, withRouter } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\n\r\nimport { AppBar, Toolbar, IconButton, Typography, MenuItem, Menu, Button } from \"@material-ui/core\";\r\nimport AccountCircle from \"@material-ui/icons/AccountCircle\";\r\nimport PowerSettingsNewIcon from \"@material-ui/icons/PowerSettingsNew\";\r\nimport MoreIcon from \"@material-ui/icons/MoreVert\";\r\n\r\nimport { connect } from \"react-redux\";\r\nimport { logoutUser } from \"../../redux/actions/userActions\";\r\n\r\nconst styles = (theme) => ({\r\n  ...theme.styles,\r\n  grow: {\r\n    flexGrow: 1\r\n  },\r\n  title: {\r\n    \"& a\": {\r\n      textDecoration: \"none\",\r\n      color: \"inherit\"\r\n    }\r\n  },\r\n  headerIcon: {\r\n    width: 30,\r\n    marginRight: theme.spacing(1)\r\n  },\r\n  navButtons: {\r\n    padding: 0,\r\n    fontWeight: \"bold\",\r\n    \"& a\": {\r\n      textDecoration: \"none\",\r\n      color: \"inherit\",\r\n      padding: \"0.4rem\"\r\n    },\r\n    \"& a.active\": {\r\n      backgroundColor: \"white\",\r\n      color: theme.palette.primary.main,\r\n      borderRadius: 5\r\n    }\r\n  },\r\n  sectionDesktop: {\r\n    display: \"none\",\r\n    [theme.breakpoints.up(\"md\")]: {\r\n      display: \"flex\"\r\n    }\r\n  },\r\n  sectionMobile: {\r\n    display: \"flex\",\r\n    [theme.breakpoints.up(\"md\")]: {\r\n      display: \"none\"\r\n    }\r\n  }\r\n});\r\n\r\nconst Header = ({ classes, isAuthenticated, logoutUser, history }) => {\r\n  const [mobileMoreAnchorEl, setMobileMoreAnchorEl] = useState(null);\r\n\r\n  const isMobileMenuOpen = Boolean(mobileMoreAnchorEl);\r\n\r\n  const handleMobileMenuClose = () => {\r\n    setMobileMoreAnchorEl(null);\r\n  };\r\n\r\n  const handleMobileMenuOpen = (event) => {\r\n    setMobileMoreAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const mobileMenuId = \"primary-search-account-menu-mobile\";\r\n  const renderMobileMenu = (\r\n    <Menu\r\n      anchorEl={mobileMoreAnchorEl}\r\n      anchorOrigin={{ vertical: \"top\", horizontal: \"right\" }}\r\n      id={mobileMenuId}\r\n      keepMounted\r\n      transformOrigin={{ vertical: \"top\", horizontal: \"right\" }}\r\n      open={isMobileMenuOpen}\r\n      onClose={handleMobileMenuClose}\r\n    >\r\n      {isAuthenticated ? (\r\n        <React.Fragment>\r\n          {\" \"}\r\n          <MenuItem className={classes.navButtons}>\r\n            <NavLink to={\"/dashboard\"}>\r\n              <IconButton color='inherit'>\r\n                <AccountCircle />\r\n              </IconButton>\r\n              Dashboard\r\n            </NavLink>\r\n          </MenuItem>\r\n          <MenuItem className={classes.navButtons} onClick={() => logoutUser(history)}>\r\n            <IconButton color='inherit'>\r\n              <PowerSettingsNewIcon />\r\n            </IconButton>\r\n            Logout\r\n          </MenuItem>\r\n        </React.Fragment>\r\n      ) : (\r\n          <React.Fragment>\r\n            <MenuItem className={classes.navButtons}>\r\n              <NavLink to={\"/signup\"}>\r\n                Signup\r\n            </NavLink>\r\n            </MenuItem>\r\n            <MenuItem className={classes.navButtons}>\r\n              <NavLink to={\"/login\"}>\r\n                Login\r\n            </NavLink>\r\n            </MenuItem>\r\n          </React.Fragment>\r\n        )}\r\n    </Menu>\r\n  );\r\n\r\n  return (\r\n    <AppBar position='static' className={classes.grow}>\r\n      <Toolbar>\r\n        <NavLink to={\"/\"}>\r\n          {\" \"}\r\n          <img\r\n            src={\"/assets/todo-icon-header.jpg\"}\r\n            alt='Todo Header Icon'\r\n            className={classes.headerIcon}\r\n          />\r\n        </NavLink>\r\n\r\n        <Typography className={classes.title} variant='h6' noWrap>\r\n          <NavLink to={\"/\"}>TodoApp</NavLink>\r\n        </Typography>\r\n        <div className={classes.grow} />\r\n        <div className={classes.sectionDesktop}>\r\n          {isAuthenticated ? (\r\n            <React.Fragment>\r\n              {\" \"}\r\n              <Button edge='end' color='inherit' className={classes.navButtons}>\r\n                <NavLink to={\"/dashboard\"}>Dashboard</NavLink>\r\n              </Button>\r\n              <Button\r\n                edge='end'\r\n                color='inherit'\r\n                onClick={() => logoutUser(history)}\r\n                className={classes.navButtons}\r\n              >\r\n                <a href='#!'>Logout</a>\r\n              </Button>\r\n            </React.Fragment>\r\n          ) : (\r\n              <React.Fragment>\r\n                <Button aria-label='signup user' color='inherit' className={classes.navButtons}>\r\n                  <NavLink to={\"/signup\"}>Signup</NavLink>\r\n                </Button>\r\n                <Button aria-label='login user' color='inherit' className={classes.navButtons}>\r\n                  <NavLink to={\"/login\"}>Login</NavLink>\r\n                </Button>\r\n              </React.Fragment>\r\n            )}\r\n        </div>\r\n        <div className={classes.sectionMobile}>\r\n          <IconButton\r\n            aria-label='show more'\r\n            aria-controls={mobileMenuId}\r\n            aria-haspopup='true'\r\n            onClick={handleMobileMenuOpen}\r\n            color='inherit'\r\n          >\r\n            <MoreIcon />\r\n          </IconButton>\r\n        </div>\r\n      </Toolbar>\r\n      {renderMobileMenu}\r\n    </AppBar>\r\n  );\r\n};\r\n\r\nHeader.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  isAuthenticated: PropTypes.bool.isRequired,\r\n  logoutUser: PropTypes.func.isRequired\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  isAuthenticated: state.user.isAuthenticated\r\n});\r\n\r\nexport default connect(mapStateToProps, { logoutUser })(withStyles(styles)(withRouter(Header)));\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport { Typography } from \"@material-ui/core\";\r\n\r\nconst styles = (theme) => ({\r\n  ...theme.styles,\r\n  footer: {\r\n    height: \"2rem\",\r\n    background: theme.palette.primary.main,\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    flexDirection: \"column\"\r\n  },\r\n  footerText: {\r\n    textAlign: \"center\",\r\n    color: \"white\"\r\n  }\r\n});\r\n\r\nconst Footer = ({ classes }) => {\r\n  return (\r\n    <footer className={classes.footer}>\r\n      <Typography className={classes.footerText}>&copy; Copyright Wadeea Kiwan 2020</Typography>\r\n    </footer>\r\n  );\r\n};\r\n\r\nFooter.propTypes = {\r\n  classes: PropTypes.object.isRequired\r\n};\r\n\r\nexport default withStyles(styles)(Footer);\r\n","import React from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\n\r\nconst PrivateRoute = ({ component: Component, user: { isAuthenticated, loading }, ...rest }) => (\r\n  <Route\r\n    {...rest}\r\n    render={(props) =>\r\n      !isAuthenticated && !loading ? <Redirect to='/login' /> : <Component {...props} />\r\n    }\r\n  />\r\n);\r\n\r\nPrivateRoute.propTypes = {\r\n  user: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  user: state.user\r\n});\r\n\r\nexport default connect(mapStateToProps)(PrivateRoute);\r\n","import React from \"react\";\r\nimport { Link, Redirect } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport { Container, Typography, Grow } from \"@material-ui/core\";\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nconst styles = (theme) => ({\r\n  ...theme.styles,\r\n  containerHeader: {\r\n    marginBottom: \"1rem\",\r\n    color: theme.palette.primary.main\r\n  }\r\n});\r\n\r\nconst Home = ({ classes, isAuthenticated }) => {\r\n  if (isAuthenticated) {\r\n    return <Redirect to={\"/dashboard\"} />;\r\n  }\r\n\r\n  return (\r\n    <Grow in timeout={800}>\r\n      <Container maxWidth='lg'>\r\n        <img src={\"./assets/todo-icon.png\"} alt='Todo Icon' className={classes.image} />\r\n        <Typography variant='h2' className={classes.containerHeader}>\r\n          Welcome To The Todo App\r\n        </Typography>\r\n        <small>\r\n          Please <Link to={\"/login\"}>login</Link> to make your own todo list\r\n        </small>\r\n      </Container>\r\n    </Grow>\r\n  );\r\n};\r\n\r\nHome.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  isAuthenticated: PropTypes.bool.isRequired\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  isAuthenticated: state.user.isAuthenticated\r\n});\r\n\r\nexport default connect(mapStateToProps, {})(withStyles(styles)(Home));\r\n","import React, { useState } from \"react\";\r\nimport { Link, Redirect } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport {\r\n  Typography,\r\n  TextField,\r\n  Button,\r\n  CircularProgress,\r\n  Container,\r\n  Grow\r\n} from \"@material-ui/core\";\r\n\r\nimport { connect } from \"react-redux\";\r\nimport { signupUser } from \"../../redux/actions/userActions\";\r\n\r\nconst styles = (theme) => ({\r\n  ...theme.styles\r\n});\r\n\r\nconst Signup = ({ classes, user: { loading, isAuthenticated }, signupUser }) => {\r\n  const [formData, setFormData] = useState({\r\n    name: \"\",\r\n    email: \"\",\r\n    password: \"\",\r\n    confirmPassword: \"\"\r\n  });\r\n\r\n  const { name, email, password, confirmPassword } = formData;\r\n\r\n  const handleChange = (event) => {\r\n    const { name, value } = event.target;\r\n    setFormData((prevState) => ({ ...prevState, [name]: value }));\r\n  };\r\n\r\n  const handleSubmit = async (event) => {\r\n    event.preventDefault();\r\n    if (password !== confirmPassword) {\r\n      console.log(\"Passwords do not match!\");\r\n    } else {\r\n      await signupUser({ name, email, password });\r\n    }\r\n  };\r\n\r\n  if (isAuthenticated) {\r\n    return <Redirect to={\"/dashboard\"} />;\r\n  }\r\n\r\n  return (\r\n    <Grow in timeout={800}>\r\n      <Container maxWidth='sm' className={classes.form}>\r\n        <img src={\"./assets/todo-icon.png\"} alt='Todo Icon' className={classes.image} />\r\n        <Typography variant='h3' className={classes.pageTitle}>\r\n          Signup\r\n        </Typography>\r\n        <form onSubmit={handleSubmit}>\r\n          <TextField\r\n            id='name'\r\n            name='name'\r\n            type='text'\r\n            label='Name'\r\n            className={classes.textField}\r\n            value={name}\r\n            onChange={handleChange}\r\n            fullWidth\r\n            required\r\n          ></TextField>\r\n          <TextField\r\n            id='email'\r\n            name='email'\r\n            type='email'\r\n            label='Email'\r\n            className={classes.textField}\r\n            value={email}\r\n            onChange={handleChange}\r\n            fullWidth\r\n            required\r\n          ></TextField>\r\n          <TextField\r\n            id='password'\r\n            name='password'\r\n            type='password'\r\n            label='Password'\r\n            className={classes.textField}\r\n            value={password}\r\n            onChange={handleChange}\r\n            fullWidth\r\n            required\r\n          ></TextField>\r\n          <TextField\r\n            id='confirmPassword'\r\n            name='confirmPassword'\r\n            type='password'\r\n            label='Confirm Password'\r\n            className={classes.textField}\r\n            value={confirmPassword}\r\n            onChange={handleChange}\r\n            fullWidth\r\n            required\r\n          ></TextField>\r\n          <Button\r\n            type='submit'\r\n            variant='contained'\r\n            color='primary'\r\n            className={classes.button}\r\n            disabled={loading}\r\n          >\r\n            Signup\r\n            {loading && <CircularProgress size={30} className={classes.progress} />}\r\n          </Button>\r\n          <br />\r\n          <small>\r\n            Already have an account? Login <Link to='/login'>here</Link>\r\n          </small>\r\n        </form>\r\n      </Container>\r\n    </Grow>\r\n  );\r\n};\r\n\r\nSignup.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  user: PropTypes.object.isRequired,\r\n  signupUser: PropTypes.func.isRequired\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  user: state.user\r\n});\r\n\r\nexport default connect(mapStateToProps, { signupUser })(withStyles(styles)(Signup));\r\n","import React, { useState } from \"react\";\r\nimport { Link, Redirect } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport {\r\n  Typography,\r\n  TextField,\r\n  Button,\r\n  CircularProgress,\r\n  Container,\r\n  Grow\r\n} from \"@material-ui/core\";\r\n\r\nimport { connect } from \"react-redux\";\r\nimport { loginUser } from \"../../redux/actions/userActions\";\r\n\r\nconst styles = (theme) => ({\r\n  ...theme.styles\r\n});\r\n\r\nconst Login = ({ classes, user: { loading, isAuthenticated }, loginUser }) => {\r\n  const [formData, setFormData] = useState({\r\n    email: \"\",\r\n    password: \"\"\r\n  });\r\n\r\n  const { email, password } = formData;\r\n\r\n  const handleChange = (event) => {\r\n    const { name, value } = event.target;\r\n    setFormData((prevState) => ({ ...prevState, [name]: value }));\r\n  };\r\n\r\n  const handleSubmit = async (event) => {\r\n    event.preventDefault();\r\n    await loginUser({ email, password });\r\n  };\r\n\r\n  if (isAuthenticated) {\r\n    return <Redirect to={\"/dashboard\"} />;\r\n  }\r\n\r\n  return (\r\n    <Grow in timeout={800}>\r\n      <Container maxWidth='sm' className={classes.form}>\r\n        <img src={\"./assets/todo-icon.png\"} alt='Todo Icon' className={classes.image} />\r\n        <Typography variant='h3' className={classes.pageTitle}>\r\n          Login\r\n        </Typography>\r\n        <form onSubmit={handleSubmit}>\r\n          <TextField\r\n            id='email'\r\n            name='email'\r\n            type='email'\r\n            label='Email'\r\n            className={classes.textField}\r\n            value={email}\r\n            onChange={handleChange}\r\n            fullWidth\r\n            required\r\n          ></TextField>\r\n          <TextField\r\n            id='password'\r\n            name='password'\r\n            type='password'\r\n            label='Password'\r\n            className={classes.textField}\r\n            value={password}\r\n            onChange={handleChange}\r\n            fullWidth\r\n            required\r\n          ></TextField>\r\n          <Button\r\n            type='submit'\r\n            variant='contained'\r\n            color='primary'\r\n            className={classes.button}\r\n            disabled={loading}\r\n          >\r\n            Login\r\n            {loading && <CircularProgress size={30} className={classes.progress} />}\r\n          </Button>\r\n          <br />\r\n          <small>\r\n            Don't have an account? Sign up <Link to='/signup'>here</Link>\r\n          </small>\r\n        </form>\r\n      </Container>\r\n    </Grow>\r\n  );\r\n};\r\n\r\nLogin.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  user: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  user: state.user\r\n});\r\n\r\nexport default connect(mapStateToProps, { loginUser })(withStyles(styles)(Login));\r\n","import React, { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport dayjs from \"dayjs\";\r\nimport relativeTime from \"dayjs/plugin/relativeTime\";\r\n\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport {\r\n  Grid,\r\n  Card,\r\n  CardContent,\r\n  Typography,\r\n  Slide,\r\n  CardActionArea,\r\n  IconButton,\r\n  Tooltip\r\n} from \"@material-ui/core\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\n\r\nimport { connect } from \"react-redux\";\r\nimport { markTodo, deleteTodo } from \"../../redux/actions/todoActions\";\r\n\r\nconst styles = (theme) => ({\r\n  ...theme.styles,\r\n  todoContainer: {\r\n    display: \"grid\",\r\n    textAlign: \"left\"\r\n  },\r\n  completed: {\r\n    textDecoration: \"line-through\"\r\n  },\r\n  inCompleted: {\r\n    textDecoration: \"none\"\r\n  },\r\n  todoCard: {\r\n    display: \"flex\",\r\n    position: \"relative\"\r\n  },\r\n  editButton: {\r\n    position: \"absolute\",\r\n    top: 5,\r\n    right: 60,\r\n    zIndex: 1\r\n  },\r\n  deleteButton: {\r\n    position: \"absolute\",\r\n    top: 5,\r\n    right: 5,\r\n    zIndex: 1\r\n  },\r\n  todoItemDetails: {\r\n    display: \"flex\",\r\n    flexDirection: \"row\",\r\n    justifyContent: \"space-between\"\r\n  },\r\n  categoryBadge: {\r\n    color: \"white\",\r\n    backgroundColor: \"orange\",\r\n    padding: 5,\r\n    borderRadius: 5\r\n  }\r\n});\r\n\r\nconst TodoItem = ({ classes, todo, markTodo, deleteTodo }) => {\r\n  const [done, setDone] = useState(false);\r\n  dayjs.extend(relativeTime);\r\n\r\n  const handleTodoDone = () => {\r\n    setDone(!done);\r\n    markTodo(todo.id, { done });\r\n  };\r\n\r\n  return (\r\n    <Tooltip title=\"Click to mark the task\" aria-label=\"mark to todo\">\r\n      <Grid item xs={12} className={classes.todoContainer}>\r\n        <Slide in direction='up' timeout={1000}>\r\n          <Card className={classes.todoCard}>\r\n            <Link to={`/update-todo/${todo.id}`}>\r\n              <Tooltip title='Edit' aria-label=\"edit\">\r\n                <IconButton className={classes.editButton}>\r\n                  <EditIcon color='primary' />\r\n                </IconButton>\r\n              </Tooltip>\r\n            </Link>\r\n            <Tooltip title='Delete' aria-label=\"delete\">\r\n              <IconButton\r\n                color='secondary'\r\n                onClick={() => deleteTodo(todo.id)}\r\n                className={classes.deleteButton}\r\n              >\r\n                <DeleteIcon />\r\n              </IconButton>\r\n            </Tooltip>\r\n            <CardActionArea onClick={handleTodoDone}>\r\n              <CardContent\r\n                className={`${todo.done ? classes.completed : classes.inCompleted} ${classes.cardContent\r\n                  }`}\r\n              >\r\n                <Typography variant='h5' color='primary' gutterBottom>\r\n                  {todo.title}\r\n                </Typography>\r\n                <Typography gutterBottom>\r\n                  <strong>Description:</strong> {todo.description}\r\n                </Typography>\r\n                <div className={classes.todoItemDetails}>\r\n                  <Typography color='textSecondary'>\r\n                    <strong>created</strong> {dayjs(todo.createdAt).fromNow()}\r\n                  </Typography>\r\n                  <Typography className={classes.categoryBadge}>{todo.category}</Typography>\r\n                </div>\r\n              </CardContent>\r\n            </CardActionArea>\r\n          </Card>\r\n        </Slide>\r\n      </Grid>\r\n    </Tooltip>\r\n  );\r\n};\r\n\r\nTodoItem.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  todo: PropTypes.object.isRequired,\r\n  markTodo: PropTypes.func.isRequired,\r\n  deleteTodo: PropTypes.func.isRequired\r\n};\r\n\r\nexport default connect(null, { markTodo, deleteTodo })(withStyles(styles)(TodoItem));\r\n","import {\r\n  GET_TODOS,\r\n  GET_TODO,\r\n  TODO_LOADING,\r\n  CREATE_TODO,\r\n  UPDATE_TODO,\r\n  MARK_TODO,\r\n  DELETE_TODO,\r\n  SEARCH_TODOS\r\n} from \"../types\";\r\nimport axios from \"axios\";\r\n\r\nexport const getTodosByUserId = (userId) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: TODO_LOADING });\r\n\r\n    const res = await axios.get(`${process.env.REACT_APP_BACKEND_URL}/todos/user/${userId}`, {\r\n      headers: {\r\n        Authorization: `Bearer ${localStorage.token}`\r\n      }\r\n    });\r\n\r\n    dispatch({\r\n      type: GET_TODOS,\r\n      payload: res.data\r\n    });\r\n  } catch (err) {\r\n    console.error(err.message);\r\n  }\r\n};\r\n\r\nexport const getTodo = (todoId) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: TODO_LOADING });\r\n\r\n    const res = await axios.get(`${process.env.REACT_APP_BACKEND_URL}/todos/${todoId}`, {\r\n      headers: {\r\n        Authorization: `Bearer ${localStorage.token}`\r\n      }\r\n    });\r\n\r\n    dispatch({\r\n      type: GET_TODO,\r\n      payload: res.data\r\n    });\r\n  } catch (err) {\r\n    console.error(err.message);\r\n  }\r\n};\r\n\r\nexport const createTodo = (payload) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: TODO_LOADING });\r\n\r\n    const res = await axios.post(\r\n      `${process.env.REACT_APP_BACKEND_URL}/todos/`,\r\n      JSON.stringify(payload),\r\n      {\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          Authorization: `Bearer ${localStorage.token}`\r\n        }\r\n      }\r\n    );\r\n\r\n    dispatch({\r\n      type: CREATE_TODO,\r\n      payload: res.data\r\n    });\r\n  } catch (err) {\r\n    console.error(err.message);\r\n  }\r\n};\r\n\r\nexport const updateTodo = (todoId, payload) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: TODO_LOADING });\r\n\r\n    const res = await axios.put(\r\n      `${process.env.REACT_APP_BACKEND_URL}/todos/update/${todoId}`,\r\n      JSON.stringify(payload),\r\n      {\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          Authorization: `Bearer ${localStorage.token}`\r\n        }\r\n      }\r\n    );\r\n\r\n    dispatch({\r\n      type: UPDATE_TODO,\r\n      payload: res.data\r\n    });\r\n  } catch (err) {\r\n    console.error(err.message);\r\n  }\r\n};\r\n\r\nexport const markTodo = (todoId, payload) => async (dispatch) => {\r\n  try {\r\n    const res = await axios.put(\r\n      `${process.env.REACT_APP_BACKEND_URL}/todos/${todoId}/done`,\r\n      JSON.stringify(payload),\r\n      {\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          Authorization: `Bearer ${localStorage.token}`\r\n        }\r\n      }\r\n    );\r\n\r\n    dispatch({\r\n      type: MARK_TODO,\r\n      payload: res.data\r\n    });\r\n  } catch (err) {\r\n    console.error(err.message);\r\n  }\r\n};\r\n\r\nexport const deleteTodo = (todoId) => async (dispatch) => {\r\n  try {\r\n    const res = await axios.delete(`${process.env.REACT_APP_BACKEND_URL}/todos/${todoId}/`, {\r\n      headers: {\r\n        Authorization: `Bearer ${localStorage.token}`\r\n      }\r\n    });\r\n    dispatch({\r\n      type: DELETE_TODO,\r\n      payload: { ...res.data, todoId }\r\n    });\r\n  } catch (err) {\r\n    console.error(err.message);\r\n  }\r\n};\r\n\r\nexport const searchTodos = (searchText) => async (dispatch) => {\r\n  try {\r\n    dispatch({\r\n      type: SEARCH_TODOS,\r\n      payload: searchText\r\n    });\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport { Container, Grid, CircularProgress, Typography } from \"@material-ui/core\";\r\n\r\nimport TodoItem from \"./TodoItem\";\r\n\r\nconst styles = (theme) => ({\r\n  ...theme.styles,\r\n  todoListContainer: {\r\n    padding: 0\r\n  }\r\n});\r\n\r\nconst TodoList = ({ classes, todos, loading }) => {\r\n  return (\r\n    <Container maxWidth='lg' className={classes.todoListContainer}>\r\n      {loading ? (\r\n        <CircularProgress size={150} className={classes.spinnerDiv} />\r\n      ) : (\r\n        <React.Fragment>\r\n          {todos.length ? (\r\n            <Grid container direction='column' spacing={2}>\r\n              {todos.map((todo) => (\r\n                <TodoItem key={todo.id} todo={todo} />\r\n              ))}\r\n            </Grid>\r\n          ) : (\r\n            <div className={classes.spinnerDiv}>\r\n              <Typography variant='h4'>No todo items found.</Typography>\r\n            </div>\r\n          )}\r\n        </React.Fragment>\r\n      )}\r\n    </Container>\r\n  );\r\n};\r\n\r\nTodoList.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  todos: PropTypes.array.isRequired,\r\n  loading: PropTypes.bool.isRequired\r\n};\r\n\r\nexport default withStyles(styles)(TodoList);\r\n","import React, { useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport { TextField, Button, CircularProgress, Slide } from \"@material-ui/core\";\r\n\r\nimport { connect } from \"react-redux\";\r\nimport { createTodo, updateTodo } from \"../../redux/actions/todoActions\";\r\n\r\nconst styles = (theme) => ({\r\n  ...theme.styles,\r\n  todoForm: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    \"& .MuiTextField-root\": {\r\n      margin: \"0.5rem 0\"\r\n    }\r\n  },\r\n  todoButton: {\r\n    marginTop: 10,\r\n    marginBottom: 10,\r\n    position: \"relative\"\r\n  },\r\n  todoProgress: {\r\n    position: \"absolute\"\r\n  }\r\n});\r\n\r\nconst TodoForm = ({ classes, loading, todo, createTodo, updateTodo, edit }) => {\r\n  const [formData, setFormData] = useState({\r\n    title: edit && todo ? todo.title : \"\",\r\n    description: edit && todo ? todo.description : \"\",\r\n    category: edit && todo ? todo.category : \"\"\r\n  });\r\n\r\n  const history = useHistory();\r\n\r\n  const { title, description, category } = formData;\r\n\r\n  const handleChange = (event) => {\r\n    const { name, value } = event.target;\r\n    setFormData((prevState) => ({ ...prevState, [name]: value }));\r\n  };\r\n\r\n  const handleSubmit = async (event) => {\r\n    event.preventDefault();\r\n    if (edit) {\r\n      updateTodo(todo.id, { title, description, category });\r\n      history.replace(\"/dashboard\");\r\n    } else {\r\n      createTodo({ title, description, category });\r\n    }\r\n    setFormData({ title: \"\", description: \"\", category: \"\" });\r\n  };\r\n\r\n  return (\r\n    <Slide in direction='up' timeout={1000}>\r\n      <form onSubmit={handleSubmit} className={classes.todoForm}>\r\n        <TextField\r\n          id='title'\r\n          name='title'\r\n          type='text'\r\n          label='Title'\r\n          className={classes.todoTextField}\r\n          value={title}\r\n          onChange={handleChange}\r\n          fullWidth\r\n          variant='outlined'\r\n          required\r\n        ></TextField>\r\n        <TextField\r\n          id='description'\r\n          name='description'\r\n          type='text'\r\n          label='Description'\r\n          className={classes.todoTextField}\r\n          value={description}\r\n          onChange={handleChange}\r\n          fullWidth\r\n          variant='outlined'\r\n          required\r\n        ></TextField>\r\n        <TextField\r\n          id='category'\r\n          name='category'\r\n          type='text'\r\n          label='Category'\r\n          className={classes.todoTextField}\r\n          value={category}\r\n          onChange={handleChange}\r\n          fullWidth\r\n          variant='outlined'\r\n          required\r\n        ></TextField>\r\n        <Button\r\n          type='submit'\r\n          variant='contained'\r\n          color='primary'\r\n          className={classes.todoButton}\r\n          disabled={loading}\r\n        >\r\n          {edit ? \"Submit\" : \"Add\"}\r\n          {loading && <CircularProgress size={30} className={classes.todoProgress} />}\r\n        </Button>\r\n        {edit && (\r\n          <Button\r\n            type='button'\r\n            variant='contained'\r\n            color='secondary'\r\n            className={classes.todoButton}\r\n            onClick={() => history.push(\"/dashboard\")}\r\n          >\r\n            Cancel\r\n          </Button>\r\n        )}\r\n      </form>\r\n    </Slide>\r\n  );\r\n};\r\n\r\nTodoForm.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  todo: PropTypes.object.isRequired,\r\n  loading: PropTypes.bool.isRequired,\r\n  createTodo: PropTypes.func.isRequired,\r\n  updateTodo: PropTypes.func.isRequired,\r\n  edit: PropTypes.bool.isRequired\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  todo: state.todo.todo,\r\n  loading: state.todo.loading\r\n});\r\n\r\nexport default connect(mapStateToProps, { createTodo, updateTodo })(withStyles(styles)(TodoForm));\r\n","import React, { useState, useEffect } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport { TextField, IconButton } from \"@material-ui/core\";\r\nimport ClearIcon from \"@material-ui/icons/Clear\";\r\n\r\nimport { connect } from \"react-redux\";\r\nimport { searchTodos } from \"../redux/actions/todoActions\";\r\n\r\nconst styles = (theme) => ({\r\n  ...theme.styles,\r\n  searchContainer: {\r\n    marginBottom: \"1.5rem\"\r\n  }\r\n});\r\n\r\nconst SearchBar = ({ classes, searchTodos }) => {\r\n  const [searchText, setSearchText] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    searchTodos(searchText);\r\n  }, [searchTodos, searchText]);\r\n\r\n  const searchChangeHandler = (e) => {\r\n    setSearchText(e.target.value);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.searchContainer}>\r\n      <TextField\r\n        id='search'\r\n        name='searchText'\r\n        placeholder='Search todos by category'\r\n        fullWidth\r\n        margin='normal'\r\n        variant='outlined'\r\n        className={classes.searchText}\r\n        value={searchText}\r\n        onChange={searchChangeHandler}\r\n        InputProps={{\r\n          endAdornment: (\r\n            <IconButton\r\n              onClick={() => {\r\n                setSearchText(\"\");\r\n              }}\r\n            >\r\n              <ClearIcon />\r\n            </IconButton>\r\n          )\r\n        }}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nSearchBar.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  searchTodos: PropTypes.func.isRequired\r\n};\r\n\r\nexport default connect(null, { searchTodos })(withStyles(styles)(SearchBar));\r\n","import {\r\n  LOAD_USER,\r\n  USER_LOADING,\r\n  SIGNUP_USER,\r\n  LOGIN_USER,\r\n  LOAD_USER_FAIL,\r\n  SIGNUP_USER_FAIL,\r\n  LOGIN_USER_FAIL,\r\n  LOGOUT_USER\r\n} from \"../types\";\r\n\r\nconst initialState = {\r\n  token: localStorage.getItem(\"token\"),\r\n  user: {},\r\n  errors: null,\r\n  isAuthenticated: false,\r\n  loading: false\r\n};\r\n\r\nexport default (state = initialState, action) => {\r\n  const { type, payload } = action;\r\n\r\n  switch (type) {\r\n    case LOAD_USER:\r\n      return {\r\n        ...state,\r\n        user: payload,\r\n        isAuthenticated: true,\r\n        loading: false\r\n      };\r\n    case LOGIN_USER:\r\n    case SIGNUP_USER:\r\n      localStorage.setItem(\"token\", payload.token);\r\n      return {\r\n        ...state,\r\n        user: payload.user,\r\n        token: payload.token,\r\n        isAuthenticated: true,\r\n        loading: false\r\n      };\r\n    case USER_LOADING:\r\n      return {\r\n        ...state,\r\n        loading: true\r\n      };\r\n    case LOAD_USER_FAIL:\r\n    case SIGNUP_USER_FAIL:\r\n    case LOGIN_USER_FAIL:\r\n      localStorage.removeItem(\"token\");\r\n      return {\r\n        ...state,\r\n        errors: payload,\r\n        user: null,\r\n        isAuthenticated: false,\r\n        loading: false\r\n      };\r\n    case LOGOUT_USER:\r\n      localStorage.removeItem(\"token\");\r\n      return {\r\n        ...state,\r\n        errors: null,\r\n        user: null,\r\n        isAuthenticated: false,\r\n        loading: false\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import {\r\n  GET_TODOS,\r\n  GET_TODO,\r\n  CREATE_TODO,\r\n  TODO_LOADING,\r\n  UPDATE_TODO,\r\n  MARK_TODO,\r\n  DELETE_TODO,\r\n  SEARCH_TODOS\r\n} from \"../types\";\r\n\r\nconst initialState = {\r\n  todos: [],\r\n  filteredTodos: [],\r\n  todo: {},\r\n  searchText: \"\",\r\n  loading: false\r\n};\r\n\r\nexport default (state = initialState, action) => {\r\n  const { type, payload } = action;\r\n\r\n  switch (type) {\r\n    case UPDATE_TODO:\r\n    case GET_TODOS:\r\n    case MARK_TODO:\r\n      return {\r\n        ...state,\r\n        todos: payload,\r\n        loading: false\r\n      };\r\n    case GET_TODO:\r\n      return {\r\n        ...state,\r\n        todo: payload,\r\n        loading: false\r\n      };\r\n    case CREATE_TODO:\r\n      return {\r\n        ...state,\r\n        todos: [payload, ...state.todos],\r\n        loading: false\r\n      };\r\n    case DELETE_TODO:\r\n      return {\r\n        ...state,\r\n        todos: state.todos.filter((todo) => todo.id !== payload.todoId),\r\n        loading: false\r\n      };\r\n    case SEARCH_TODOS:\r\n      return {\r\n        ...state,\r\n        searchText: payload,\r\n        filteredTodos: state.todos.filter(\r\n          (todo) => todo.category.toLowerCase().indexOf(payload.toLowerCase()) !== -1\r\n        ),\r\n        loading: false\r\n      };\r\n    case TODO_LOADING:\r\n      return {\r\n        ...state,\r\n        loading: true\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { createStore, combineReducers, applyMiddleware } from \"redux\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\nimport thunk from \"redux-thunk\";\r\nimport userReducer from \"./reducers/userReducer\";\r\nimport todoReducer from \"./reducers/todoReducer\";\r\n\r\nconst initialState = {};\r\n\r\nconst middleware = [thunk];\r\n\r\nconst reducers = combineReducers({\r\n  user: userReducer,\r\n  todo: todoReducer\r\n});\r\n\r\nconst store = createStore(\r\n  reducers,\r\n  initialState,\r\n  composeWithDevTools(applyMiddleware(...middleware))\r\n);\r\n\r\nexport default store;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport dayjs from \"dayjs\";\r\n\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport { Grow, Grid, Paper, Container, Typography } from \"@material-ui/core\";\r\nimport { Mail, CalendarToday } from \"@material-ui/icons\";\r\n\r\nimport TodoList from \"../components/todos/TodoList\";\r\nimport TodoForm from \"./todos/TodoForm\";\r\nimport SearchBar from \"./SearchBar\";\r\n\r\nimport store from \"../redux/store\";\r\nimport { connect } from \"react-redux\";\r\nimport { getTodosByUserId } from \"../redux/actions/todoActions\";\r\n\r\nconst styles = (theme) => ({\r\n  ...theme.styles,\r\n\r\n  profileImage: {\r\n    marginTop: \"1rem\",\r\n    maxWidth: 150,\r\n    borderRadius: \"50%\"\r\n  },\r\n  profileDetails: {\r\n    textAlign: \"left\",\r\n    padding: \"1rem\",\r\n    \"& p\": {\r\n      \"& svg\": {\r\n        verticalAlign: \"middle\"\r\n      }\r\n    }\r\n  }\r\n});\r\n\r\nconst Dashboard = ({ classes, user, todo: { todos, loading }, getTodosByUserId }) => {\r\n  const [todoSearch, setTodoSearch] = useState([]);\r\n\r\n  useEffect(() => {\r\n    getTodosByUserId(user.id);\r\n  }, [getTodosByUserId, user.id]);\r\n\r\n  useEffect(() => {\r\n    store.subscribe(() => {\r\n      if (!store.getState().todo.searchText) {\r\n        setTodoSearch(store.getState().todo.todos);\r\n      } else {\r\n        setTodoSearch(store.getState().todo.filteredTodos);\r\n      }\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <Grow in timeout={800}>\r\n      <Container maxWidth='md'>\r\n        <SearchBar />\r\n        <Grid container spacing={2}>\r\n          <Grid item sm={4} xs={12}>\r\n            <Paper>\r\n              <img src={user.image} alt='profile' className={classes.profileImage} />\r\n              <div className={classes.profileDetails}>\r\n                <Typography variant='h5' color='primary' gutterBottom>\r\n                  {user.name}\r\n                </Typography>\r\n                <Typography color='primary' gutterBottom>\r\n                  <Mail /> {user.email}\r\n                </Typography>\r\n                <Typography color='primary' gutterBottom>\r\n                  <CalendarToday /> Joined {dayjs(user.createdAt).format(\"MMM YYYY\")}\r\n                </Typography>\r\n              </div>\r\n            </Paper>\r\n          </Grid>\r\n          <Grid item sm={8} xs={12}>\r\n            <TodoForm edit={false} />\r\n            <TodoList todos={todoSearch} loading={loading} />\r\n          </Grid>\r\n        </Grid>\r\n      </Container>\r\n    </Grow>\r\n  );\r\n};\r\n\r\nDashboard.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  user: PropTypes.object.isRequired,\r\n  // todos: PropTypes.array.isRequired,\r\n  // loading: PropTypes.bool.isRequired,\r\n  todo: PropTypes.object.isRequired,\r\n  getTodosByUserId: PropTypes.func.isRequired\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  user: state.user.user,\r\n  // todos: state.todo.todos,\r\n  // loading: state.todo.loading\r\n  todo: state.todo\r\n});\r\n\r\nexport default connect(mapStateToProps, { getTodosByUserId })(withStyles(styles)(Dashboard));\r\n","import React, { useEffect } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport { Grow, Container, Typography, CircularProgress } from \"@material-ui/core\";\r\n\r\nimport { connect } from \"react-redux\";\r\nimport { getTodo } from \"../../redux/actions/todoActions\";\r\nimport TodoForm from \"./TodoForm\";\r\n\r\nconst styles = (theme) => ({\r\n  ...theme.styles,\r\n  editTodoContainer: {},\r\n  todoForm: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\"\r\n  }\r\n});\r\n\r\nconst EditTodo = ({ classes, todo, loading, getTodo }) => {\r\n  const { todoId } = useParams();\r\n\r\n  useEffect(() => {\r\n    getTodo(todoId);\r\n  }, [getTodo, todoId]);\r\n\r\n  return (\r\n    <Grow in timeout={800}>\r\n      <Container maxWidth='sm' className={classes.editTodoContainer}>\r\n        {loading ? (\r\n          <CircularProgress size={150} className={classes.spinnerDiv} />\r\n        ) : (\r\n          <React.Fragment>\r\n            <Typography variant='h4' color='primary'>\r\n              Edit Your Todo Item\r\n            </Typography>\r\n            {todo && <TodoForm edit={true} className={classes.todoForm} />}\r\n          </React.Fragment>\r\n        )}\r\n      </Container>\r\n    </Grow>\r\n  );\r\n};\r\n\r\nEditTodo.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  loading: PropTypes.bool.isRequired,\r\n  getTodo: PropTypes.func.isRequired\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  todo: state.todo.todo,\r\n  loading: state.todo.loading\r\n});\r\n\r\nexport default connect(mapStateToProps, { getTodo })(withStyles(styles)(EditTodo));\r\n","import React, { useEffect } from \"react\";\r\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\r\nimport \"./App.css\";\r\n\r\nimport Header from \"./components/layout/Header\";\r\nimport Footer from \"./components/layout/Footer\";\r\n\r\nimport { MuiThemeProvider, createMuiTheme } from \"@material-ui/core\";\r\nimport themeFile from \"./util/theme\";\r\n\r\nimport PrivateRoute from \"./util/PrivateRoute\";\r\nimport Home from \"./components/Home\";\r\nimport Signup from \"./components/user/Signup\";\r\nimport Login from \"./components/user/Login\";\r\nimport Dashboard from \"./components/Dashboard\";\r\nimport EditTodo from \"./components/todos/EditTodo\";\r\n\r\nimport { Provider } from \"react-redux\";\r\nimport store from \"./redux/store\";\r\nimport { loadUser } from \"./redux/actions/userActions\";\r\n\r\nconst theme = createMuiTheme(themeFile);\r\n\r\nconst App = () => {\r\n  useEffect(() => {\r\n    store.dispatch(loadUser());\r\n  }, []);\r\n\r\n  return (\r\n    <MuiThemeProvider theme={theme}>\r\n      <Provider store={store}>\r\n        <Router>\r\n          <Header />\r\n          <main className='container'>\r\n            <Switch>\r\n              <Route exact path='/' component={Home} />\r\n              <PrivateRoute exact path='/dashboard' component={Dashboard} />\r\n              <Route exact path='/signup' component={Signup} />\r\n              <Route exact path='/login' component={Login} />\r\n              <PrivateRoute exact path='/update-todo/:todoId' component={EditTodo} />\r\n            </Switch>\r\n          </main>\r\n          <Footer />\r\n        </Router>\r\n      </Provider>\r\n    </MuiThemeProvider>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","export default {\r\n  palette: {\r\n    primary: {\r\n      light: \"#33c9dc\",\r\n      main: \"#00bcd4\",\r\n      dark: \"#008394\",\r\n      contrastText: \"#fff\"\r\n    },\r\n    secondary: {\r\n      light: \"#ff6333\",\r\n      main: \"#ff3d00\",\r\n      dark: \"#b22a00\",\r\n      contrastText: \"#fff\"\r\n    }\r\n  },\r\n  styles: {\r\n    form: {\r\n      textAlign: \"center\"\r\n    },\r\n    pageTitle: {\r\n      margin: \"10px auto 10px auto\",\r\n      color: \"#00bcd4\"\r\n    },\r\n    textField: {\r\n      margin: \"10px auto 10px auto\"\r\n    },\r\n    button: {\r\n      marginTop: 20,\r\n      marginBottom: 20,\r\n      position: \"relative\"\r\n    },\r\n    customError: {\r\n      color: \"red\",\r\n      fontSize: \"0.8rem\",\r\n      marginTop: 10\r\n    },\r\n    progress: {\r\n      position: \"absolute\"\r\n    }\r\n  }\r\n};\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}